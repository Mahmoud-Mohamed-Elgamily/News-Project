<?php

namespace Tests\Unit;
use Tests\TestCase;
use App\User;
use App\Article;
use App\Http\Controllers\UserController;
use Laravel\Passport\Passport;

class UserTest extends TestCase
{
    public $UserController;
    public function setUp(): void
    {   
        parent::setUp();
        $this->UserController = new UserController();
    }

    public function testAutoGeneratedPasswordIsRandom()
    {
        $this->assertFalse($this->UserController->generateRandomPassword() === $this->UserController->generateRandomPassword());
    }
    public function testFailLogin()
    {
        $credential = [
            'email' => 'fakeEmail',
            'password' => 'fakePassword'
        ];
        $response = $this->post('/api/auth/login', $credential);
        $response->assertStatus(400);
    }

    public function testFailEmptyRegister()
    {
        $this->post('/api/auth/register', [])->assertStatus(400);
    }

    public function testFailEmptyNameRegister()
    {
        $this->post('/api/auth/register', ['email' => "Email Only"])->assertStatus(400);
    }

    public function testFailEmptyEmailRegister()
    {
        $this->post('/api/auth/register', ['name' => "Name Only"])->assertStatus(400);
    }

    public function testFailUniqueEmailRegister()
    {
        $user = $this->createUser();
        $this->post('/api/auth/register', ['email' => $user->email, 'name' => 'Test Unique Email'])->assertStatus(400);
    }
    public function testFailNotValidEmailRegister()
    {
        $this->post('/api/auth/register', ['name' => 123, 'email' => '123da'])->assertStatus(400);
    }
    public function testFailNameNumberRegister()
    {
        $this->post('/api/auth/register', ['name' => 123, 'email' => '123da'])->assertStatus(400);
    }

    public function testGeneratedRandomPasswordEqualsTenCharacters()
    {
        $this->assertTrue(strlen($this->UserController->generateRandomPassword()) === 10);
    }

    public function createUser()
    {
        return factory(User::class)->create();
    }
}
